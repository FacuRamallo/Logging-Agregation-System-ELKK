version: '2.2'

services:

  logging_app:
    image: docker.io/library/logging_example_app:latest
    container_name: logging_spring_app
    volumes:
      - logging_app_data:/usr/share/logging_app/data
    ports:
      - "8080:8080"
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: logging_app
    environment:
      - "SPRING_PROFILES_ACTIVE=k8s"
    depends_on:
      - fluentd

  fluentd:
    user: fluent
    image: docker.io/library/custom-fluentd:latest
    container_name: fluentd
    volumes:
      - ./fluentd/conf/fluent.conf:/fluentd/etc/fluent.conf
    depends_on:
      - kafka
    links:
      - kafka
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - kafkanet


  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafkanet

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    depends_on:
      - zookeeper
    networks:
      - kafkanet
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: access-log-messages:1:1,app-log-messages:1:1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.1-arm64
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.license.self_generated.type=trial
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - kafkanet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.1-arm64
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - kafkanet

  logstash:
    image: docker.elastic.co/logstash/logstash:8.4.1-arm64
    container_name: logstash
    user: root
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    links:
      - elasticsearch:elasticsearch
      - kafka:kafka
    networks:
      - kafkanet
    depends_on:
      - elasticsearch
      - kafka

networks:
  kafkanet:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
  logging_app_data:
    driver: local